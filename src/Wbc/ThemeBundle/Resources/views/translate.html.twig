<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>{% block title %}{% endblock %} | {% trans %}Administrator{% endtrans %}</title>
    {% block stylesheets %}
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="{{ asset('bundles/lexiktranslation/ng-table/ng-table.min.css') }}">
    {% endblock %}

    {% stylesheets 'bundles/wbctheme/css/application.min.css' filter='cssrewrite' output='css/style.css' %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}

    <!-- as of IE9 cannot parse css files with more that 4K classes separating in two files -->
    <!--[if IE 9]>
    {% stylesheets 'bundles/wbctheme/css/application-ie9-part2.css' filter='cssrewrite' output='css/4ie9.css' %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
    <![endif]-->

    {% stylesheets filter='cssrewrite' output='css/extras.css'
    '@backendcss'%}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}

    {% block extrastyles %}
    {% endblock %}

    {% image 'bundles/wbctheme/img/favicon.png' output='icon/favicon.png' %}
    <link rel="shortcut icon" href="{{ asset_url }}">
    {% endimage %}

    <!-- common libraries. required for every page-->
    {% javascripts output='js/start.js' filter="?jsqueeze"
    '@start_js'%}
    <script src="{{ asset_url }}"></script>
    {% endjavascripts %}

    <style>
        .nav-static .page-controls, .nav-static .content-wrap, .nav-static .loader-wrap {
            left: 0;
            margin-left: 0;
            transition: none 0s ease 0s ;
        }

        .page-controls, .content-wrap, .loader-wrap {
            left: 154px;
            margin-left: 0px;
        }
    </style>

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <script>
        /* yeah we need this empty stylesheet here. It's cool chrome & chromium fix
         chrome fix https://code.google.com/p/chromium/issues/detail?id=167083
         https://code.google.com/p/chromium/issues/detail?id=332189
         */
    </script>
</head>
<body class="nav-static">
<!--
  Main sidebar seen on the left. may be static or collapsing depending on selected state.

    * Collapsing - navigation automatically collapse when mouse leaves it and expand when enters.
    * Static - stays always open.
-->
{#{ include('WbcThemeBundle:Partials:sidebar.html.twig') }#}
{{ include('WbcThemeBundle:Partials:navigator.html.twig', { 'env': 'translation' }) }}
{{ include('WbcThemeBundle:Partials:chat.html.twig') }}

<div class="content-wrap">
    <!-- main page content. the place to put widgets in. usually consists of .row > .col-md-* > .widget.  -->
    <main id="content" class="content" role="main">

        {{ include('WbcThemeBundle:Partials/Widgets/security:flash.html.twig') }}

        {% block flash_message %}
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        {% set flashes = app.session.flashbag.all() %}
                        {% if flashes | length > 0 %}
                            {% for type, messages in flashes %}
                                {% for message in messages %}
                                    <div class="alert alert-{{ type }}">{{ message }}</div>
                                {% endfor %}
                            {% endfor %}
                        {% endif %}
                    </div>
                </div>
            </div>
        {% endblock flash_message %}

        {% block content '' %}
    </main>
</div>

<!-- The Loader. Is shown when pjax happens -->
<div class="loader-wrap hiding hide">
    <i class="fa fa-circle-o-notch fa-spin-fast"></i>
</div>

{{ include('WbcThemeBundle:Partials/Widgets/security:info-modal.html.twig') }}

{% block javascript_footer %}
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.13/angular.min.js"></script>
    <script src="{{ asset('bundles/lexiktranslation/ng-table/ng-table.min.js') }}"></script>
    <script src="{{ asset('bundles/wbctheme/js/translate.js') }}"></script>
{% endblock %}

<!-- common libraries. required for every page-->
{% javascripts output='js/lib.js' filter="?jsqueeze"
'@commonlibs'%}
<script src="{{ asset_url }}"></script>
{% endjavascripts %}

{% javascripts 'bundles/wbctheme/vendor/pace.js/pace.js' filter="?jsqueeze" output='js/pace.js' %}
<script src="{{ asset_url }}" data-pace-options='{ "target": ".content-wrap", "ghostTime": 1000 }'></script>
{% endjavascripts %}


{% block extrascripts %}
{% endblock %}

<script>
    function playTTS(read,lang) {
        var tts="/speech";
        var sec="/audio/recs/point1sec.mp3";
        var a = new XMLHttpRequest();
        var b = document.getElementById("tts");
        var read = read.replace(/&/g,"and");
        var url = tts+".class.php";

        b.src=sec;
        b.play();
        a.open("POST", url, true);
        a.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        a.setRequestHeader("Connection", "close");
        a.onreadystatechange = function() {
        if(a.readyState == 4 && a.status == 200) {
            b.src=a.responseText;
            }
        }
        a.send("read="+ read +"&lang="+lang);
    }
    function stopTTS() {
         var a = document.getElementById("tts");
         a.pause();
         a.currentTime = 0;
    }

    function pauseTTS() {
         var a = document.getElementById("tts");
         a.pause();
    }
    function resumeTTS() {
         var a = document.getElementById("tts");
         a.play();
    }

    document.write('<audio id="tts" autoplay><source src="/audio/recs/point1sec.mp3" type="audio/mp3" /></audio>');

    $(document).ready(function(){
        //configuring messenger
        $('.widget').widgster();
        var theme = 'air';
        $.globalMessenger({ theme: theme });
        Messenger.options = { theme: theme  };

        //customize dates
        moment.locale('{{ app.request.locale }}');

        function showInfo(Text, actions){
            var Text = Text || "{{ "There is some important for you to know" | trans }}";
            var actions = actions || false;

            {#
                var actions = {
                    cancel: {
                        label: 'cancel launch',
                        action: function() {
                            return msg.update({
                                message: 'Thermonuclear war averted',
                                type: 'success',
                                actions: false
                            });
                        }
                    }
                };
            #}

            Messenger().post({
                message: Text,
                actions: actions
            });
        }

        function showSuccess(){
            var Text = Text || "{{ "Congratulations! you are so smart!" | trans }}";

            Messenger().post({
                message: Text,
                type: 'success',
                showCloseButton: true
            });
        }

        function showError(Text){
            var Text = Text || "{{ "Error, please try it later!" | trans }}";
            Messenger().post(Text);
        }

        function showErrorAndRetry(Text, functionToRetry){
            Messenger().run({
                errorMessage: 'Error destroying alien planet',
                successMessage: 'Alien planet destroyed!',
                action: function(opts) {
                    if(functionToRetry){
                        return opts.success();
                    }else{
                        return opts.error({
                            status: 500,
                            readyState: 0,
                            responseText: 0
                        });
                    }
                }
            });

            return false;
        }

        function refreshNotifications(){
            $('#load-notifications-btn').click();
        }

        //actions
        refreshNotifications();
        var notificationsInterval;
        notificationsInterval = setInterval(refreshNotifications, 5 * 1000);

        $.winFocus(function(event, isVisible) {
            if(isVisible){
                //restart interval
                notificationsInterval = setInterval(refreshNotifications, 5 * 1000);
                console.log('Restart Interval');
            }else{
                //stop interval
                clearInterval(notificationsInterval);
                console.log('Stop Interval');
            }
        });
    });
</script>

</body>
</html>